name: Next.js CI/CD 

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/fe-mitrphol-dashboard:latest

    - name: Deploy to Server
      if: github.ref == 'refs/heads/main'
      env:
        SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
        DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/fe-mitrphol-dashboard:latest
        NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
        NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
        REDIS: ${{ secrets.REDIS }} 
      run: |
        sudo apt-get update && sudo apt-get install -y sshpass
        
        # Debug: Print the environment variables
        echo "DOCKER_IMAGE=$DOCKER_IMAGE"
        echo "NEXT_PUBLIC_BASE_URL=$NEXT_PUBLIC_BASE_URL"
        echo "NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=$NEXT_PUBLIC_GOOGLE_MAPS_API_KEY"
        echo "REDIS=$REDIS"

        sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$SERVER_IP "
          docker pull $DOCKER_IMAGE && 
          docker stop fe-mitrphol-dashboard || true && 
          docker rm fe-mitrphol-dashboard || true && 
          docker run -d --name fe-mitrphol-dashboard -p 3000:3000 \
            -e NEXT_PUBLIC_BASE_URL=\"$NEXT_PUBLIC_BASE_URL\" \
            -e NEXT_PUBLIC_GOOGLE_MAPS_API_KEY=\"$NEXT_PUBLIC_GOOGLE_MAPS_API_KEY\" \
            -e REDIS=\"$REDIS\" \
            $DOCKER_IMAGE
        "
